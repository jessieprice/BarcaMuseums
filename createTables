CREATE DATABASE IF NOT EXISTS BMTRS;
USE BMTRS;

CREATE TABLE IF NOT EXISTS BMTRS.Admin (
	Email VARCHAR(100) PRIMARY KEY,
	Pass VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS BMTRS.Visitor (
	Email VARCHAR(100) PRIMARY KEY,
	Pass VARCHAR(100) NOT NULL,
    CCNum BIGINT(19) NOT NULL CHECK (CCNum > 0),
	CCExpMonth INT NOT NULL CHECK ((CCExpMonth > 0) AND (CCExpMonth <=12)),
	CCExpYear YEAR NOT NULL CHECK (CCExpYear >= YEAR(CURDATE())),
	CCSecNum INT NOT NULL CHECK ((LEN(CCSecNum) >=3) AND (LEN(CCSecNum) <=4))
);

CREATE TABLE IF NOT EXISTS BMTRS.Museum (
	Name VARCHAR(100) PRIMARY KEY,
	AvgRating INT DEFAULT NULL,
	CuratorEmail VARCHAR(100) DEFAULT NULL,
	FOREIGN KEY(CuratorEmail)
		REFERENCES Visitor(Email)
		ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS BMTRS.CuratorRequest (
	VisitorEmail VARCHAR(100) NOT NULL,
	MuseumName VARCHAR(100) NOT NULL,
	PRIMARY KEY (VisitorEmail, MuseumName),
	FOREIGN KEY (VisitorEmail)
		REFERENCES Visitor(Email)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (MuseumName)
		REFERENCES Museum(Name)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS BMTRS.Exhibit (
	MuseumName VARCHAR(100) NOT NULL,
	ExhibitName VARCHAR(100) NOT NULL,
	Year CHAR(4) NOT NULL,
	URL VARCHAR(100) NOT NULL,
	PRIMARY KEY(MuseumName, ExhibitName),
	FOREIGN KEY (MuseumName)
		REFERENCES Museum(Name)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS BMTRS.Review (
	VisitorEmail VARCHAR(100) NOT NULL,
	MuseumName VARCHAR(100) NOT NULL,
	Comment VARCHAR(140) DEFAULT NULL,
	Rating INT NOT NULL CHECK (Rating >=0 AND Rating <= 5),
	PRIMARY KEY (VisitorEmail, MuseumName),
	FOREIGN KEY (VisitorEmail)
		REFERENCES Visitor(Email)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (MuseumName)
		REFERENCES Museum(Name)
		ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS BMTRS.Ticket (
	VisitorEmail VARCHAR(100) NOT NULL,
	MuseumName VARCHAR(100) NOT NULL,
	Price FLOAT(10,2) NOT NULL,
	PurchaseTimeStamp DATETIME NOT NULL,
	PRIMARY KEY (MuseumName, VisitorEmail),
	FOREIGN KEY (MuseumName)
		REFERENCES Museum(Name)
		ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (VisitorEmail)
		REFERENCES Visitor(Email)
		ON DELETE CASCADE ON UPDATE CASCADE
);
